apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app-python.fullname" . }}
  labels:
    {{- include "app-python.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  serviceName: {{ .Values.serviceName }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "app-python.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app-python.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app-python.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "helm-app.env-vars" . | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: :5000/
              port: http
          readinessProbe:
            httpGet:
              path: :5000/
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.volumes.config.name }}
              mountPath: {{ .Values.volumes.config.mountPath }}
              subPath: {{ .Values.volumes.config.subPath }}
            - name: {{ .Values.volumes.state.name }}
              mountPath: {{ .Values.volumes.state.mountPath }}
            - name: workdir
              mountPath: /workdir
      initContainers:
        - name: install
          image: busybox:1.28
          command:
            - wget
            - "-O"
            - "/workdir/test.html"
            - http://info.cern.ch
          volumeMounts:
            - name: workdir
              mountPath: /workdir
        - name: comment-1
          image: busybox:1.28
          command:
            - sh
            - "-c"
            - "echo '<-- COMMENT 1 -->' >> /workdir/test.html"
          volumeMounts:
            - name: workdir
              mountPath: /workdir
        - name: comment-2
          image: busybox:1.28
          command:
            - sh
            - "-c"
            - "echo '<-- COMMENT 2 -->' >> /workdir/test.html"
          volumeMounts:
            - name: workdir
              mountPath: /workdir
      dnsPolicy: Default
      volumes:
        - name: workdir
          configMap:
            name: workdir
        - name: {{ .Values.volumes.config.name }}
          configMap:
            name: {{ .Values.volumes.config.configMap.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.volumes.state.name }}
      spec:
        {{- toYaml .Values.volumes.state.spec | nindent 8 }}
    - metadata:
        name: workdir
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 128Mi
