name: python

on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python.yaml'

defaults:
  run:
    working-directory: app_python

jobs:
  docs:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v2.0.0
        with:
          failure-threshold: error
          dockerfile: 'Dockerfile'
      - name: Lint Markdown
        uses: nosborn/github-action-markdown-cli@v3.0.1
        with:
          files: .

  code:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest

  deploy:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [docs, code]
    steps:
      - uses: actions/checkout@v3

      - name: set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: login to ghcr
        id: docker_login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and deploy master image to ghcr.io and dockerhub
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
          echo GITHUB_REF - $ref
          docker buildx build --push \
              --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
              --platform linux/amd64,linux/arm/v7,linux/arm64 \
              -t ghcr.io/semior001/innopolis-devops-labs:${ref} .